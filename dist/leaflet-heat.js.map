{"version":3,"sources":["src/simpleheat.js","src/HeatLayer.js"],"names":["simpleheat","canvas","this","_canvas","document","getElementById","_ctx","getContext","_width","width","_height","height","_sorted","_options","defaultOptions","_data","gray","v","module","exports","prototype","data","add","point","push","clear","setOptions","options","Object","assign","_circles","_grad","getOptions","resize","_initializeCircleBrush","r2","_r","radius","blur","_circle","_createCanvas","ctx","shadowOffsetX","shadowOffsetY","fillStyle","shadowColor","shadowBlur","beginPath","arc","Math","PI","closePath","fill","_initializeGradient","gradient","createLinearGradient","i","addColorStop","fillRect","getImageData","_reinitializeShadowCanvases","_positiveCanvas","_negativeCanvas","_positiveCtx","_negativeCtx","_sortData","valueOfDataPoint","a","self","sort","b","_clearCanvas","c","clearRect","_clearCanvases","draw","minOpacity","p","len","length","weight","alpha","max","undefined","globalAlpha","drawImage","positive","negative","_applyNegativeToPositive","_colorize","putImageData","base","posAlpha","negAlpha","posVal","negVal","posPercent","negPercent","mergedPercent","mergedAlpha","round","totalAlphaPercent","ratioPos","mergedVal","pixels","colorize","grayscale","alphaBurn","missingAlpha","keepRatio","offset","j","floor","createElement","constructor","0.0","0.33","0.5","0.66","1.0","L","HeatLayer","Layer","Class","extend","initialize","latlngs","_latlngs","setLatLngs","redraw","addLatLng","latlng","_heat","_updateOptions","_frame","_map","_animating","Util","requestAnimFrame","_redraw","onAdd","map","_initCanvas","pane","getPane","appendChild","_panes","overlayPane","on","_reset","zoomAnimation","Browser","any3d","_animateZoom","onRemove","removeChild","getPanes","off","addTo","addLayer","DomUtil","create","originProp","testProp","style","size","getSize","x","y","animated","addClass","topLeft","containerPointToLayerPoint","setPosition","cell","len2","k","layer","r","bounds","Bounds","maxZoom","getMaxZoom","pow","min","getZoom","cellSize","grid","panePos","_getMapPanePos","offsetX","offsetY","ll","latLngToContainerPoint","slice","contains","alt","len3","e","scale","getZoomScale","zoom","_getCenterOffset","center","_multiplyBy","subtract","setTransform","TRANSFORM","getTranslateString","heatLayer"],"mappings":"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","file":"dist/leaflet-heat.js","sourcesContent":["'use strict';\n\n\nif (typeof module !== 'undefined') module.exports = simpleheat;\n\nfunction simpleheat(canvas) {\n    if (!(this instanceof simpleheat)) return new simpleheat(canvas);\n\n    this._canvas = canvas = typeof canvas === 'string' ? document.getElementById(canvas) : canvas;\n\n    this._ctx = canvas.getContext('2d');\n    this._width = canvas.width;\n    this._height = canvas.height;\n    this._sorted = false;\n    this._options = simpleheat.defaultOptions\n    this._data = [];\n}\n\nsimpleheat.prototype = {\n\n    data: function (data) {\n        this._data = data;\n        this._sorted = false;\n        return this;\n    },\n\n\n    add: function (point) {\n        this._data.push(point);\n        this._sorted = false;\n        return this;\n    },\n\n    clear: function () {\n        this._data = [];\n        return this;\n    },\n\n    setOptions: function (options) {\n        this._options = Object.assign({}, this._options, options);\n        delete this._circles;\n        delete this._grad;\n        return this;\n    },\n\n    getOptions: function () {\n        return Object.assign({}, this._options);\n    },\n\n    resize: function () {\n        this._width = this._canvas.width;\n        this._height = this._canvas.height;\n    },\n\n\n    _initializeCircleBrush: function () {\n\n        var r2 = this._r = this._options.radius + this._options.blur;\n\n        var canvas = this._circle = this._createCanvas();\n        var ctx = canvas.getContext('2d');\n\n        canvas.width = canvas.height = r2 * 2;\n\n        ctx.shadowOffsetX = ctx.shadowOffsetY = r2 * 2;\n        ctx.fillStyle = 'black'\n        ctx.shadowColor = 'black';\n        ctx.shadowBlur = this._options.blur;\n\n\n        ctx.beginPath();\n        ctx.arc(-r2, -r2, this._options.radius, 0, Math.PI * 2, true);\n        ctx.closePath();\n        ctx.fill();\n\n\n    },\n\n    _initializeGradient: function () {\n        // create a 256x1 gradient that we'll use to turn a grayscale heatmap into a colored one\n        var canvas = this._createCanvas(),\n            ctx = canvas.getContext('2d'),\n            gradient = ctx.createLinearGradient(0, 0, 0, 256);\n\n        canvas.width = 1;\n        canvas.height = 256;\n\n        for (var i in this._options.gradient) {\n            gradient.addColorStop(+i, this._options.gradient[i]);\n        }\n\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, 1, 256);\n\n        this._grad = ctx.getImageData(0, 0, 1, 256).data;\n\n        return this;\n    },\n\n    _reinitializeShadowCanvases: function () {\n        if (!this._positiveCanvas) this._positiveCanvas = this._createCanvas();\n        if (!this._negativeCanvas) this._negativeCanvas = this._createCanvas();\n        if (!this._positiveCtx) this._positiveCtx = this._positiveCanvas.getContext('2d');\n        if (!this._negativeCtx) this._negativeCtx = this._negativeCanvas.getContext('2d');\n        this._positiveCanvas.width = this._width;\n        this._negativeCanvas.width = this._width;\n        this._positiveCanvas.height = this._height;\n        this._negativeCanvas.height = this._height;\n    },\n\n    _sortData: function () {\n        var self = this;\n        // sort so that positive is painted over neutra is painted over negative. Unfortunately there does not seem to be\n        // a globalCompositeOperation that treats source layers equally to the layer on the canvas.\n        // Layer color painted last will be stronger\n        function valueOfDataPoint(a) {\n            return a[3] + (a[0] / self._height / 4) + (a[1] / self._width / 4);\n        }\n        this._data.sort(function (a, b) {\n            return valueOfDataPoint(a) - valueOfDataPoint(b)\n        });\n        this._sorted = true;\n    },\n\n    _clearCanvas: function (c) {\n        c.clearRect(0, 0, this._width, this._height);\n    },\n\n    _clearCanvases: function () {\n        this._clearCanvas(this._positiveCtx);\n        this._clearCanvas(this._negativeCtx);\n        this._clearCanvas(this._ctx);\n    },\n\n\n    draw: function (minOpacity) {\n        if (!this._circle) this._initializeCircleBrush();\n        if (!this._grad) this._initializeGradient();\n        if (!this._sorted) this._sortData();\n\n        this._reinitializeShadowCanvases();\n        this._clearCanvases()\n\n        // draw circles according to points on a positive or negative canvas\n        for (var i = 0, len = this._data.length, p; i < len; i++) {\n            p = this._data[i];\n            var weight = p[3] === 0 ? 0.5 : 1;\n            var alpha = Math.max(p[2] * weight / this._options.max, minOpacity === undefined ? 0.05 : minOpacity);\n            if (p[3] >= 0) {\n               this._positiveCtx.globalAlpha = alpha;\n               this._positiveCtx.drawImage(this._circle, p[0] - this._r, p[1] - this._r);\n            }\n\n            if (p[3] <= 0) {\n                this._negativeCtx.globalAlpha = alpha;\n                this._negativeCtx.drawImage(this._circle, p[0] - this._r, p[1] - this._r);\n            }\n        }\n\n        // merge positive and negative into one grayscale image\n        var positive = this._positiveCtx.getImageData(0, 0, this._width, this._height);\n        var negative = this._negativeCtx.getImageData(0, 0, this._width, this._height)\n        this._applyNegativeToPositive(\n            positive.data,\n            negative.data\n        )\n\n        // colorize the heatmap, using opacity value of each pixel to get the right color from our gradient\n        this._colorize(positive.data, this._grad);\n        this._ctx.putImageData(positive, 0, 0);\n        return this;\n\n    },\n\n    _applyNegativeToPositive: function (positive, negative) {\n        // merge the values and opacities of the negative and positive layers into a grayscale image\n        var base = positive;\n        for (var i = 0, len = base.length; i < len; i += 4) {\n            var posAlpha = positive[i + 3],\n                negAlpha = negative[i + 3],\n                posVal = 255 - positive[i],\n                negVal = negative[i];\n\n            if (posAlpha && negAlpha) {\n                var posPercent = posAlpha / 255;\n                var negPercent = negAlpha / 255;\n                var mergedPercent = posPercent + (1 - posPercent) * negPercent; // e.g. 0.5 transparancy + 0.5 transparancy = 0.75 transparency\n                var mergedAlpha = Math.round(mergedPercent * 255);\n                var totalAlphaPercent = posPercent + negPercent;\n                // negative value is always 0, so just merge by multiply positive\n                var ratioPos = posPercent / totalAlphaPercent;\n                var mergedVal = Math.round(255 * ratioPos);\n\n                base[i] = mergedVal,\n                    base[i + 1] = mergedVal,\n                    base[i + 2] = mergedVal,\n                    base[i + 3] = mergedAlpha;\n            } else if (posAlpha) {\n                base[i] = posVal,\n                base[i + 1] = posVal,\n                base[i + 2] = posVal,\n                base[i + 3] = posAlpha;\n\n            } else if (negAlpha) {\n                base[i] = negVal,\n                base[i + 1] = negVal,\n                base[i + 2] = negVal,\n                base[i + 3] = negAlpha;\n            }\n        }\n    },\n\n    _colorize: function (pixels, gradient) {\n        if (this._options.colorize) {\n            for (var i = 0, len = pixels.length; i < len; i += 4) {\n                var alpha = pixels[i + 3] / 256;\n\n                if (alpha) {\n                    var grayscale = pixels[i] // get gradient color from red value, (e.g. grayscale value)\n                    if (this._options.alphaBurn > 0) {\n                        var missingAlpha = (1 - alpha) * this._options.alphaBurn\n                        var keepRatio = 1 - missingAlpha\n                        // burn the gradient value towards the center of the gradient as the alpha is closer to 0\n                        if (grayscale > 127) {\n                            var offset = grayscale - 127\n                            grayscale = Math.round(127 + (offset * keepRatio))\n                        } else {\n                            var offset = 127 - grayscale\n                            grayscale = Math.round(127 - (offset * keepRatio))\n                        }\n                    }\n                    var j = grayscale * 4; \n                    pixels[i] = gradient[j];\n                    pixels[i + 1] = gradient[j + 1];\n                    pixels[i + 2] = gradient[j + 2];\n                    pixels[i + 3] = Math.floor((gradient[j + 3] / 256) * (alpha) * 256);\n                }\n            }\n        }\n    },\n\n    _createCanvas: function () {\n        if (typeof document !== 'undefined') {\n            return document.createElement('canvas');\n        } else {\n            // create a new canvas instance in node.js\n            // the canvas class needs to have a default constructor without any parameter\n            return new this._canvas.constructor();\n        }\n    }\n};\n\nfunction gray(v) {\n    return 'rgb(' + v + ', ' + v + ', ' + v + ')';\n}\n\nsimpleheat.defaultOptions = {\n    alphaBurn: 1,\n    max: 1,\n    radius: 25,\n    blur: 25,\n    gradient: {\n        '0.0': 'rgba(204, 0, 0, 1)',\n        '0.33': 'rgba(255, 178, 0, 1)',\n        '0.5': 'rgba(255, 255, 0, 1)',\n        '0.66': 'rgba(180, 255, 0, 1)',\n        '1.0': 'rgba(0, 214, 96, 1)'\n    },\n    colorize: true\n}\n","'use strict';\n\nL.HeatLayer = (L.Layer ? L.Layer : L.Class).extend({\n\n    initialize: function (latlngs, options) {\n        this._latlngs = latlngs;\n        L.setOptions(this, Object.assign({}, simpleheat.defaultOptions, options));\n    },\n\n    setLatLngs: function (latlngs) {\n        this._latlngs = latlngs;\n        return this.redraw();\n    },\n\n    addLatLng: function (latlng) {\n        this._latlngs.push(latlng);\n        return this.redraw();\n    },\n\n    setOptions: function (options) {\n        L.setOptions(this, options);\n        if (this._heat) this._updateOptions();\n        return this.redraw();\n    },\n\n    redraw: function () {\n        if (this._heat && !this._frame && this._map && !this._map._animating) {\n            this._frame = L.Util.requestAnimFrame(this._redraw, this);\n        }\n        return this;\n    },\n\n    onAdd: function (map) {\n        this._map = map;\n\n        if (!this._canvas) {\n            this._initCanvas();\n        }\n\n        if (this.options.pane) {\n            this.getPane().appendChild(this._canvas);\n        } else {\n            map._panes.overlayPane.appendChild(this._canvas);\n        }\n\n        map.on('moveend', this._reset, this);\n\n        if (map.options.zoomAnimation && L.Browser.any3d) {\n            map.on('zoomanim', this._animateZoom, this);\n        }\n\n        this._reset();\n    },\n\n    onRemove: function (map) {\n        if (this.options.pane) {\n            this.getPane().removeChild(this._canvas);\n        } else {\n            map.getPanes().overlayPane.removeChild(this._canvas);\n        }\n\n        map.off('moveend', this._reset, this);\n\n        if (map.options.zoomAnimation) {\n            map.off('zoomanim', this._animateZoom, this);\n        }\n    },\n\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    _initCanvas: function () {\n        var canvas = this._canvas = L.DomUtil.create('canvas', 'leaflet-heatmap-layer leaflet-layer');\n\n        var originProp = L.DomUtil.testProp(['transformOrigin', 'WebkitTransformOrigin', 'msTransformOrigin']);\n        canvas.style[originProp] = '50% 50%';\n\n        var size = this._map.getSize();\n        canvas.width  = size.x;\n        canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n        this._heat = simpleheat(canvas);\n        this._updateOptions();\n        this.redraw();\n    },\n\n    _updateOptions: function () {\n        this._heat.setOptions(this.options)\n    },\n\n    _reset: function () {\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n        L.DomUtil.setPosition(this._canvas, topLeft);\n\n        var size = this._map.getSize();\n\n        if (this._heat._width !== size.x) {\n            this._canvas.width = this._heat._width  = size.x;\n        }\n        if (this._heat._height !== size.y) {\n            this._canvas.height = this._heat._height = size.y;\n        }\n\n        this._redraw();\n    },\n\n    _redraw: function () {\n        if (!this._map) {\n            return;\n        }\n        var data = [],\n            r = this._heat._r,\n            size = this._map.getSize(),\n            bounds = new L.Bounds(\n                L.point([-r, -r]),\n                size.add([r, r])),\n\n            max = this.options.max === undefined ? 1 : this.options.max,\n            maxZoom = this.options.maxZoom === undefined ? this._map.getMaxZoom() : this.options.maxZoom,\n            v = 1 / Math.pow(2, Math.max(0, Math.min(maxZoom - this._map.getZoom(), 12))),\n            cellSize = r / 2,\n            grid = [],\n            panePos = this._map._getMapPanePos(),\n            offsetX = panePos.x % cellSize,\n            offsetY = panePos.y % cellSize,\n            i, len, p, cell, x, y, j, len2, k, layer;\n\n        // console.time('process');\n        for (i = 0, len = this._latlngs.length; i < len; i++) {\n            var ll = this._latlngs[i]\n            p = this._map.latLngToContainerPoint(ll.slice ? ll.slice(0,2) : ll);\n            if (bounds.contains(p)) {\n                x = Math.floor((p.x - offsetX) / cellSize) + 2;\n                y = Math.floor((p.y - offsetY) / cellSize) + 2;\n\n                var alt =\n                    this._latlngs[i].alt !== undefined ? this._latlngs[i].alt :\n                    this._latlngs[i][2] !== undefined ? +this._latlngs[i][2] : 1;\n                layer = (this._latlngs[i][3] === undefined ? 1 : this._latlngs[i][3]) + 1;\n                k = alt * v;\n\n                grid[y] = grid[y] || [];\n                grid[y][x] = grid[y][x] || [];\n                cell = grid[y][x][layer];\n\n                if (!cell) {\n                    grid[y][x][layer] = [p.x, p.y, k, layer];\n\n                } else {\n                    cell[0] = (cell[0] * cell[2] + p.x * k) / (cell[2] + k); // x\n                    cell[1] = (cell[1] * cell[2] + p.y * k) / (cell[2] + k); // y\n                    cell[2] += k; // cumulated intensity value\n                }\n            }\n        }\n\n        for (var i = 0, len = grid.length; i < len; i++) {\n            if (grid[i]) {\n                for (var j = 0, len2 = grid[i].length; j < len2; j++) {\n                    if (grid[i][j]) {\n                        for (var k = 0, len3 = grid[i][j].length; k < len3; k++) {\n                            cell = grid[i][j][k];\n                            if (cell) {\n                                data.push([\n                                    Math.round(cell[0]),\n                                    Math.round(cell[1]),\n                                    Math.min(cell[2], max),\n                                    cell[3] - 1\n                                ]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // console.timeEnd('process');\n        // console.time('draw ' + data.length);\n        this._heat.data(data).draw(this.options.minOpacity);\n        // console.timeEnd('draw ' + data.length);\n\n        this._frame = null;\n    },\n\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom),\n            offset = this._map._getCenterOffset(e.center)._multiplyBy(-scale).subtract(this._map._getMapPanePos());\n\n        if (L.DomUtil.setTransform) {\n            L.DomUtil.setTransform(this._canvas, offset, scale);\n\n        } else {\n            this._canvas.style[L.DomUtil.TRANSFORM] = L.DomUtil.getTranslateString(offset) + ' scale(' + scale + ')';\n        }\n    }\n});\n\nL.heatLayer = function (latlngs, options) {\n    return new L.HeatLayer(latlngs, options);\n};\n"]}